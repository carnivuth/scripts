
# VARIABLES

# menu backend program
set $menu_backend bemenu

# scripts folder
set $bin ~/.local/bin

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# WORKSPACES

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1; workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2; workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3; workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4; workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5; workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6; workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7; workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8; workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9; workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10; workspace number $ws10

# switch workspaces
bindsym $mod+k workspace prev
bindsym $mod+j workspace next

#move window to next/previous container
bindsym $mod+shift+j move window to workspace next; workspace next
bindsym $mod+shift+k move window to workspace  prev; workspace prev

# use mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+return exec --no-startup-id alacritty
bindsym $mod+shift+return exec --no-startup-id alacritty --class floating

# kill focused window
bindsym $mod+q kill

# start rofi (a program launcher)
bindsym $mod+d exec --no-startup-id $bin/launcher.sh -b $menu_backend

#change focus
# alternatively, you can use the cursor keys:
bindsym $mod+left focus left
bindsym $mod+down focus down
bindsym $mod+up focus up
bindsym $mod+right focus right

# move focused window
# alternatively, you can use the cursor keys:
bindsym $mod+shift+left move left
bindsym $mod+shift+down move down
bindsym $mod+shift+up move up
bindsym $mod+shift+right move right

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# toggle tiling / floating
bindsym $mod+shift+space floating toggle

#audio controls
bindsym xf86audioraisevolume exec --no-startup-id pamixer -i 5
bindsym xf86audiolowervolume exec --no-startup-id pamixer -d 5
bindsym xf86audiomute exec --no-startup-id pamixer -t
bindsym $mod+shift+a exec --no-startup-id pamixer -t

#brightness controls
bindsym xf86monbrightnessdown exec --no-startup-id  brightnessctl -d intel_backlight s 10%-
bindsym xf86monbrightnessup exec --no-startup-id brightnessctl -d intel_backlight s +10%

# media player controls
bindsym xf86audioplay exec --no-startup-id playerctl play-pause
bindsym xf86audionext exec --no-startup-id playerctl next
bindsym xf86audioprev exec --no-startup-id playerctl previous

#launch telegram
bindsym $mod+t exec --no-startup-id telegram-desktop

#launch blueman
bindsym $mod+b exec --no-startup-id blueman-manager

#launch pavucontrol
bindsym $mod+a exec --no-startup-id pavucontrol

# reload the configuration file
bindsym $mod+shift+r reload

#lock screen
bindsym $mod+l exec --no-startup-id "playerctl pause; swaylock -i ~/.local/lib/arch-chan.jpg
bindsym $mod+shift+l exec --no-startup-id "swaylock -i ~/.local/lib/arch-chan.jpg

#exit i3
bindsym $mod+shift+q exit

bindsym $mod+   m  exec --no-startup-id  playerctl play-pause
bindsym $mod+shift+print  exec --no-startup-id  grim -g "$(slurp -d)" - | wl-copy && notify-send -a 'grim' 'maded screenshot' 'maded screenshot'
bindsym $mod+print  exec --no-startup-id  grim - | wl-copy && notify-send -a 'grim' 'maded screenshot' 'maded screenshot'
bindsym $mod+h exec --no-startup-id  $bin/clipboard.sh -b $menu_backend
bindsym $mod+r  exec --no-startup-id  $bin/recorder.sh start
bindsym $mod+e  exec --no-startup-id  $bin/quickopen.sh -b $menu_backend
bindsym $mod+s  exec --no-startup-id  $bin/quicksearch.sh -b $menu_backend
bindsym $mod+c  exec --no-startup-id  $bin/bluetoothconnect.sh -b $menu_backend
bindsym $mod+g  exec --no-startup-id  $bin/github_repoviewer.sh -b $menu_backend
bindsym $mod+Shift+g  exec --no-startup-id  $bin/github_pages_viewer.sh -b $menu_backend
bindsym $mod+v  exec --no-startup-id  $bin/steamrunner.sh -b $menu_backend
bindsym $mod+o  exec --no-startup-id  $bin/obsidian_manage.sh daily -b $menu_backend
bindsym $mod+n  exec --no-startup-id  $bin/networkmenu.sh -b $menu_backend
bindsym $mod+w  exec --no-startup-id  $bin/themeswitcher.sh -b $menu_backend
bindsym $mod+p  exec --no-startup-id  $bin/powermenu.sh -b $menu_backend
bindsym $mod+z  exec --no-startup-id  $bin/vaultlauncher.sh -b $menu_backend
bindsym $mod+i exec --no-startup-id $terminal 'htop'
