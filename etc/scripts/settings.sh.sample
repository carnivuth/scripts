#!/bin/bash
# LOGS FOLDER PATH
SCRIPTS_LOGS_FOLDER="$HOME/.local/log/scripts"
if [[ ! -d "$SCRIPTS_LOCAL_FOLDER" ]] ;then mkdir -p "$SCRIPTS_LOGS_FOLDER"; fi

# PATH FOR PERSISTANT INFORMATIONS
SCRIPTS_LOCAL_FOLDER="$HOME/.local/cache/scripts"
if [[ ! -d "$SCRIPTS_LOCAL_FOLDER" ]] ;then mkdir -p "$SCRIPTS_LOCAL_FOLDER"; fi

# FOLDER FOR RUN INFORMATIONS
SCRIPTS_RUN_FOLDER="/tmp/scripts"
if [[ ! -d "$SCRIPTS_RUN_FOLDER" ]] ;then mkdir -p "$SCRIPTS_RUN_FOLDER"; fi

SCRIPTS_BIN_FOLDER="$HOME/.local/bin"
SCRIPTS_LIB_FOLDER="$HOME/.local/lib"
SCRIPTS_VAR_FOLDER="$SCRIPTS_LIB_FOLDER"
SCRIPTS_SYSTEMD_FOLDER="$HOME/.config/systemd/user"

# PATH TO ROFI CONFIG FOLDER
ROFI_CONFIG_FOLDER="$HOME/.config/rofi"

# PATH TO WOFI CONFIG FOLDER
WOFI_CONFIG_FOLDER="$HOME/.config/wofi"

OBSIDIAN_NOTE_VAULT="$HOME/vaults/TIL"

# GITHUB ACCOUNT FOR GITHUB APPLET
GITHUB_REPOVIEWER_ACCOUNT="insert your personal github account name"

# PATHS TO MUSIC FOLDERS FOR MUSICPLAYER APPLET
MUSICPLAYER_FOLDERS="$HOME/Music"

# PATHS TO PROJECTS FOLDERS FOR LAUNCHPROJECTS APPLET
LAUNCHPROJECTS_DEFAULT_EDITOR="vim"
LAUNCHPROJECTS_FOLDERS="$HOME"

# PATHS TO FOLDERS WITH IMAGES FOR THEMESWITCHER APPLET
THEMESWITCHER_FOLDERS="$HOME/.local/lib $HOME/Pictures/wallpapers"

# MOUNTER SCRIPT VARIABLES
declare -A MOUNTS

# LIST OF STORAGE TO MOUNT WITH RCLONE
MOUNTS["google drive"]="$HOME/google_drive"

# add mounts by adding elements to the array
# MOUNTS["rclone storage name"]="mount path"

# base url for quicksearch applet
BASE_QUICKSEARCH_URL='https://google.com/search?q='

# format for power menu script options [long|short]
POWERMENU_FORMAT='long'

# applet menu backend [rofi/wofi]
MENU_BACKEND=fzf

# enabled systemd services
ENABLED_SERVICES="weather.service updates.service battery.service ntfyd.service"
TEMPLATE_SERVICES="nxtcdd@wallpapers.service nxtcdd@projects.service nxtcdd@Documents.service folder_manager@Downloads.service"

# enabled systemd timers
ENABLED_TIMERS="git_sync.timer backup.timer prune.timer"

# BATTERY SERVICE SETTINGS

# battery device name (output of upower -e)
BATTERY_NAME="BAT0"

# battery warning limit (percentage)
BATTERY_LIMIT=20
BATTERY_SLEEP_TIME="5m"

# BACKUP TIMER SETTINGS
# policy to pass to borg prune command (monthly)
BORG_PRUNE_POLICY="10"

# path to borg repository folder with backups
BORG_REPOSITORY_FOLDER="$HOME/.borg"

# folders to backup with borg
BORG_BACKUP_TARGETS="/etc/pacman.conf
$HOME/.config/scripts/settings.sh
$HOME/.gitconfig
$HOME/projects/
$HOME/vaults/
$HOME/.ssh/config"

# rsync connection parameters for backup remote sync, there are other requirements for this to work
# user needs to be able to connect in ssh with key authentication
# rsync needs to be installed on the remote
# remote path need to exists on remote

# enable remote sync [1/0]
BORG_REMOTE_ENABLED=0

BORG_BACKUP_REMOTE_SERVER=''
BORG_BACKUP_REMOTE_PATH="/mnt/datastore/pc-backups/$HOSTNAME"

# rclone config parameters
BORG_RCLONE_ENABLED=0
BORG_RCLONE_REMOTE="google drive"
BORG_BACKUP_RCLONE_PATH="backup/$HOSTNAME"

# WEATHER WAYBAR INTEGRATION SCRIPT
WEATHER_LOCATION=''

# GIT AUTOSYNC FUNCTIONALITY
GIT_REPOS="$HOME/scripts $HOME/toolbox $HOME/vaults/* $HOME/projects/*"
# insert here ignored remote for git_sync timer
GIT_IGNORED_REMOTES=''

# MPV SOCKET FOR IPC
MPV_SOCKET="$SCRIPTS_RUN_FOLDER/mpv.sock"

# NTFYD CONFIGURATIONS
NTFYD_ENDPOINT="https://ntfy.carnivuth.org"
NTFYD_TOPICS="homelab,work,random"
NTFYD_MESSAGE_BUFFER="$SCRIPTS_RUN_FOLDER/ntfy.run"
# set to -vvv to see curl debug when running ntfyd
NTFYD_DEBUG=""

# recorder settings
RECORDER="wf-recorder"
RECORDER_OUTPUT_PATH="/tmp/captures"

# vpn connection name
VPN_CONNECTION_NAME="not configured"


# nextcloud script settings
NEXTCLOUD_URL=""
NXTCDD_USERNAME=""
NXTCDD_PASSWORD=""
